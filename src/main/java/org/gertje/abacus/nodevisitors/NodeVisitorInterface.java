package org.gertje.abacus.nodevisitors;

import org.gertje.abacus.nodes.AbstractNode;
import org.gertje.abacus.nodes.AddNode;
import org.gertje.abacus.nodes.AndNode;
import org.gertje.abacus.nodes.AssignmentNode;
import org.gertje.abacus.nodes.BooleanNode;
import org.gertje.abacus.nodes.DateNode;
import org.gertje.abacus.nodes.DivideNode;
import org.gertje.abacus.nodes.EqNode;
import org.gertje.abacus.nodes.FactorNode;
import org.gertje.abacus.nodes.FloatNode;
import org.gertje.abacus.nodes.FunctionNode;
import org.gertje.abacus.nodes.GeqNode;
import org.gertje.abacus.nodes.GtNode;
import org.gertje.abacus.nodes.IfNode;
import org.gertje.abacus.nodes.IntegerNode;
import org.gertje.abacus.nodes.LeqNode;
import org.gertje.abacus.nodes.LtNode;
import org.gertje.abacus.nodes.ModuloNode;
import org.gertje.abacus.nodes.MultiplyNode;
import org.gertje.abacus.nodes.NegativeNode;
import org.gertje.abacus.nodes.NeqNode;
import org.gertje.abacus.nodes.NotNode;
import org.gertje.abacus.nodes.NullNode;
import org.gertje.abacus.nodes.OrNode;
import org.gertje.abacus.nodes.PositiveNode;
import org.gertje.abacus.nodes.PowerNode;
import org.gertje.abacus.nodes.StatementListNode;
import org.gertje.abacus.nodes.StringNode;
import org.gertje.abacus.nodes.SubstractNode;
import org.gertje.abacus.nodes.VariableNode;

public interface NodeVisitorInterface {
	void visit(AbstractNode node) throws VisitingException;
	void visit(AddNode node) throws VisitingException;
	void visit(AndNode node) throws VisitingException;
	void visit(AssignmentNode node) throws VisitingException;
	void visit(BooleanNode node) throws VisitingException;
	void visit(DateNode node) throws VisitingException;
	void visit(DivideNode node) throws VisitingException;
	void visit(EqNode node) throws VisitingException;
	void visit(FactorNode node) throws VisitingException;
	void visit(FloatNode node) throws VisitingException;
	void visit(FunctionNode node) throws VisitingException;
	void visit(GeqNode node) throws VisitingException;
	void visit(GtNode node) throws VisitingException;
	void visit(IfNode node) throws VisitingException;
	void visit(IntegerNode node) throws VisitingException;
	void visit(LeqNode node) throws VisitingException;
	void visit(LtNode node) throws VisitingException;
	void visit(ModuloNode node) throws VisitingException;
	void visit(MultiplyNode node) throws VisitingException;
	void visit(NegativeNode node) throws VisitingException;
	void visit(NeqNode node) throws VisitingException;
	void visit(NotNode node) throws VisitingException;
	void visit(NullNode node) throws VisitingException;
	void visit(OrNode node) throws VisitingException;
	void visit(PositiveNode node) throws VisitingException;
	void visit(PowerNode node) throws VisitingException;
	void visit(StatementListNode node) throws VisitingException;
	void visit(StringNode node) throws VisitingException;
	void visit(SubstractNode node) throws VisitingException;
	void visit(VariableNode node) throws VisitingException;
}
